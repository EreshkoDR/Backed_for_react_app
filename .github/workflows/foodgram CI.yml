name: Yamdb CI

on: [push]

jobs:
  tests:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort flake8-django
        pip install -r backend/requirements.txt
    - name: Run Tests
      run: |
        python -m flake8
  
  build_dockerfile:

    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

  push_dockerfile_to_docker_hub:

    runs-on: ubuntu-latest
    needs: build_Dockerfile
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./backend/
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram:latest
  
  deploy:

    runs-on: ubuntu-latest
    needs: push_dockerfile_to_docker_hub
    steps:
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE}}
          script: |
            cd foodgram-project-react/infra/
            sudo docker-compose down 
            sudo docker-compose pull
            touch .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo DEBUG_MODE=${{ secrets.DEBUG_MODE }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d
      - name: Setup project
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd foodgram-project-react/infra/
            sudo docker-compose exec -T backend python manage.py migrate
            sudo docker-compose exec -T backend python manage.py collectstatic --no-input
            sudo docker-compose exec -T backend python manage.py upload_tags
            sudo docker-compose exec -T backend python manage.py upload_ingredients

  send_message:

    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} was completed! https://http://84.201.163.79/